; Pirrot Configuration

[general]

; The timezone you wish to use for logging and TTS services
timezone = "Europe/London"

; Simplex repeater (ident) code
callsign = RPT1

; Enable the "repeat" functionality.
; Optionally you can disable the repeater thus not "repeating" the communications receieved.
enabled = true

; Courtesy tone
; To disable courtesy tones set to: false
; Otherwise use the filename of the courtesy tone, eg. BeeBoo (without the .wav extension)
courtesy_tone = BeeBoo

; Enable automatic identificaiton?
auto_ident = false

; Ident interval (seconds) - 600 = 10 minutes!
ident_interval = 600

; An optional delay before transmission (seconds) - default is "0" (no delay and therefore immediately repeat the transmission)
; Implemented as per user feature request here: https://github.com/allebb/pirrot/issues/21
delayed_playback_interval = 0

; The PL/CTCSS to access the repeater
; Set to 'false' if you do not have a CTCSS/PL code to access the repeater.
; otherwise set the CTCSS/PL tone here eg. '110.9'
pl_tone =  110.9

; Transmit operation mode
; 'vox' = Voice Operated Transmit
; 'cor' = Carrier Operated
transmit_mode = cor

; Send the time with the ident.
ident_time = true

; Send morse code with the ident (coming in the future!)
ident_morse = true

[audio]

; The audio driver/interface to use on recording
; Linux/RPi = alsa
; MacOSX = coreaudio
; Windows = waveaudio
record_device = alsa

[morse]

; The WPM (Words per minute)
wpm = 100;

; The freqency playback (in hertz).
mfreq = 500

[storage]

; Enable saving of recordings
store_recordings = false

; Purge recording after (X days), 0 to disable purging of recordings.
purge_recording_after = 7

[gpio]

; The GPIO input pin number to use for the COS relay (required if running in COS mode).
in_cor_pin = 18

; The GPIO output pin number to use for the PTT relay.
out_ptt_pin = 23

; The "Ready status" LED output
out_ready_led_pin = 17

; The "RX" LED output
out_rx_led_pin = 27

; The "TX" LED output
out_tx_led_pin = 22

; COS Pin is inverted?
cos_pin_invert = false

; PTT Pin is inverted?
ptt_pin_invert = false

; Ready LED pin is inverted?
ready_pin_invert = false

; RX (Recieve) LED pin is inverted?
rx_pin_invert = false

; TX (Transmit) LED pin is inverted?
tx_pin_invert = false
