; Pirrot Configuration

[general]

; The timezone you wish to use for logging, TTS services, and the web interface (if enabled)
timezone = Europe/London

; Simplex repeater (ident) code
callsign = RPT1

; Enable the "repeat" functionality.
; Optionally you can disable the repeater thus not "repeating" the communications received.
enabled = true

; Courtesy tone
; To disable courtesy tones set to: false
; Otherwise use the filename of the courtesy tone, eg. BeeBoo (without the .wav extension)
courtesy_tone = BeeBoo

; Enable automatic identification?
auto_ident = false

; Ident interval (seconds) - 600 = 10 minutes!
ident_interval = 600

; An optional delay before transmission (seconds) - default is "0" (no delay and therefore immediately repeat the transmission)
; Implemented as per user feature request here: https://github.com/allebb/pirrot/issues/21
delayed_playback_interval = 0

; The PL/CTCSS to access the repeater
; Set to 'false' if you do not have a CTCSS/PL code to access the repeater.
; otherwise set the CTCSS/PL tone here eg. '110.9'
pl_tone =  110.9

; Transmit operation mode
; 'vox' = Voice Operated (auto-record and then transmit when it "hears" mic input on the USB sound card.)
; 'cor' =  =Carrier Operated Relay/Switch (record and then transmit when the COR/COS GPIO pin is ON (aka. "high"))
transmit_mode = cor

; Transmit the time with the ident message.
ident_time = true

; Send morse code with the ident (coming in the future!)
ident_morse = false

[audio]

; The audio driver/interface to use on recording
; Linux/RPi = alsa
; MacOSX = coreaudio
; Windows = waveaudio
record_device = alsa

[morse]

; The WPM (Words per minute)
morse_wpm = 20

; The freqency playback (in hertz).
morse_frequency = 800

; Output volume
morse_output_volume = 0.7

[storage]

; Enable saving of recordings
store_recordings = false

; Purge recording after (X days), 0 to disable purging of recordings.
purge_recording_after = 7

[web-interface]

; Enable the light-weight web interface
web_interface_enabled = false

; The TCP port to listen on
web_interface_port = 8440

; The IP address to bind to (default: 0.0.0.0)
web_interface_bind_ip = 0.0.0.0

; Enable logging of web server access logs to /var/log/pirrot-web.log
web_interface_logging = false

; Enable GPS position output on the dashboard.
; ** You MUST setup and configure the device and ensure that the GPS receiver is connected to the RaspberryPi **
; ** Having this setting enabled but no device connected will cause the web interface to become unresponsive **
web_gps_enabled = false

[tripwire]

; Enable the tripwire feature (sends a web hook when transmission is received)
tripwire_enabled = false

; The URL to send the HTTP request payload to when the "tripwire" is activated (a transmission is received)
; eg. http://yourwebsite.com/my-tripwire-handler-endpoint
tripwire_url = null

; This value will ensure that further transmissions within this time period (in seconds) do not trigger
; additional HTTP web hook requests (default value is 300)
tripwire_ignore_interval = 300

; HTTP request timeout (in seconds)
tripwire_request_timeout = 30

[gpio]

; The GPIO input pin (BCM) number to use for the COS relay (required if running in COS mode).
in_cor_pin = 18

; The GPIO output pin (BCM) number to use for the PTT relay.
out_ptt_pin = 23

; The "Ready status" LED output pin (BCM) number
out_ready_led_pin = 17

; The "RX" LED output pin (BCM) number
out_rx_led_pin = 27

; The "TX" LED output pin (BCM) number
out_tx_led_pin = 22

; COS Pin is inverted?
cos_pin_invert = false

; PTT Pin is inverted?
ptt_pin_invert = false

; Ready LED pin is inverted?
ready_pin_invert = false

; RX (Recieve) LED pin is inverted?
rx_pin_invert = false

; TX (Transmit) LED pin is inverted?
tx_pin_invert = false
